// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

(function (modules, entry, mainEntry, parcelRequireName, globalName) {
  /* eslint-disable no-undef */
  var globalObject =
    typeof globalThis !== 'undefined'
      ? globalThis
      : typeof self !== 'undefined'
      ? self
      : typeof window !== 'undefined'
      ? window
      : typeof global !== 'undefined'
      ? global
      : {};
  /* eslint-enable no-undef */

  // Save the require from previous bundle to this closure if any
  var previousRequire =
    typeof globalObject[parcelRequireName] === 'function' &&
    globalObject[parcelRequireName];

  var cache = previousRequire.cache || {};
  // Do not use `require` to prevent Webpack from trying to bundle this call
  var nodeRequire =
    typeof module !== 'undefined' &&
    typeof module.require === 'function' &&
    module.require.bind(module);

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire =
          typeof globalObject[parcelRequireName] === 'function' &&
          globalObject[parcelRequireName];
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error("Cannot find module '" + name + "'");
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = (cache[name] = new newRequire.Module(name));

      modules[name][0].call(
        module.exports,
        localRequire,
        module,
        module.exports,
        this
      );
    }

    return cache[name].exports;

    function localRequire(x) {
      var res = localRequire.resolve(x);
      return res === false ? {} : newRequire(res);
    }

    function resolve(x) {
      var id = modules[name][1][x];
      return id != null ? id : x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [
      function (require, module) {
        module.exports = exports;
      },
      {},
    ];
  };

  Object.defineProperty(newRequire, 'root', {
    get: function () {
      return globalObject[parcelRequireName];
    },
  });

  globalObject[parcelRequireName] = newRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  if (mainEntry) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(mainEntry);

    // CommonJS
    if (typeof exports === 'object' && typeof module !== 'undefined') {
      module.exports = mainExports;

      // RequireJS
    } else if (typeof define === 'function' && define.amd) {
      define(function () {
        return mainExports;
      });

      // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }
})({"3EhP0":[function(require,module,exports) {
var global = arguments[3];
var HMR_HOST = null;
var HMR_PORT = null;
var HMR_SECURE = false;
var HMR_ENV_HASH = "d6ea1d42532a7575";
module.bundle.HMR_BUNDLE_ID = "c42872c93e93721f";
"use strict";
/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */ /*::
import type {
  HMRAsset,
  HMRMessage,
} from '@parcel/reporter-dev-server/src/HMRServer.js';
interface ParcelRequire {
  (string): mixed;
  cache: {|[string]: ParcelModule|};
  hotData: {|[string]: mixed|};
  Module: any;
  parent: ?ParcelRequire;
  isParcelRequire: true;
  modules: {|[string]: [Function, {|[string]: string|}]|};
  HMR_BUNDLE_ID: string;
  root: ParcelRequire;
}
interface ParcelModule {
  hot: {|
    data: mixed,
    accept(cb: (Function) => void): void,
    dispose(cb: (mixed) => void): void,
    // accept(deps: Array<string> | string, cb: (Function) => void): void,
    // decline(): void,
    _acceptCallbacks: Array<(Function) => void>,
    _disposeCallbacks: Array<(mixed) => void>,
  |};
}
interface ExtensionContext {
  runtime: {|
    reload(): void,
    getURL(url: string): string;
    getManifest(): {manifest_version: number, ...};
  |};
}
declare var module: {bundle: ParcelRequire, ...};
declare var HMR_HOST: string;
declare var HMR_PORT: string;
declare var HMR_ENV_HASH: string;
declare var HMR_SECURE: boolean;
declare var chrome: ExtensionContext;
declare var browser: ExtensionContext;
declare var __parcel__import__: (string) => Promise<void>;
declare var __parcel__importScripts__: (string) => Promise<void>;
declare var globalThis: typeof self;
declare var ServiceWorkerGlobalScope: Object;
*/ var OVERLAY_ID = "__parcel__error__overlay__";
var OldModule = module.bundle.Module;
function Module(moduleName) {
    OldModule.call(this, moduleName);
    this.hot = {
        data: module.bundle.hotData[moduleName],
        _acceptCallbacks: [],
        _disposeCallbacks: [],
        accept: function(fn) {
            this._acceptCallbacks.push(fn || function() {});
        },
        dispose: function(fn) {
            this._disposeCallbacks.push(fn);
        }
    };
    module.bundle.hotData[moduleName] = undefined;
}
module.bundle.Module = Module;
module.bundle.hotData = {};
var checkedAssets /*: {|[string]: boolean|} */ , assetsToDispose /*: Array<[ParcelRequire, string]> */ , assetsToAccept /*: Array<[ParcelRequire, string]> */ ;
function getHostname() {
    return HMR_HOST || (location.protocol.indexOf("http") === 0 ? location.hostname : "localhost");
}
function getPort() {
    return HMR_PORT || location.port;
}
// eslint-disable-next-line no-redeclare
var parent = module.bundle.parent;
if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== "undefined") {
    var hostname = getHostname();
    var port = getPort();
    var protocol = HMR_SECURE || location.protocol == "https:" && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? "wss" : "ws";
    var ws = new WebSocket(protocol + "://" + hostname + (port ? ":" + port : "") + "/");
    // Web extension context
    var extCtx = typeof chrome === "undefined" ? typeof browser === "undefined" ? null : browser : chrome;
    // Safari doesn't support sourceURL in error stacks.
    // eval may also be disabled via CSP, so do a quick check.
    var supportsSourceURL = false;
    try {
        (0, eval)('throw new Error("test"); //# sourceURL=test.js');
    } catch (err) {
        supportsSourceURL = err.stack.includes("test.js");
    }
    // $FlowFixMe
    ws.onmessage = async function(event /*: {data: string, ...} */ ) {
        checkedAssets = {} /*: {|[string]: boolean|} */ ;
        assetsToAccept = [];
        assetsToDispose = [];
        var data /*: HMRMessage */  = JSON.parse(event.data);
        if (data.type === "update") {
            // Remove error overlay if there is one
            if (typeof document !== "undefined") removeErrorOverlay();
            let assets = data.assets.filter((asset)=>asset.envHash === HMR_ENV_HASH);
            // Handle HMR Update
            let handled = assets.every((asset)=>{
                return asset.type === "css" || asset.type === "js" && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);
            });
            if (handled) {
                console.clear();
                // Dispatch custom event so other runtimes (e.g React Refresh) are aware.
                if (typeof window !== "undefined" && typeof CustomEvent !== "undefined") window.dispatchEvent(new CustomEvent("parcelhmraccept"));
                await hmrApplyUpdates(assets);
                // Dispose all old assets.
                let processedAssets = {} /*: {|[string]: boolean|} */ ;
                for(let i = 0; i < assetsToDispose.length; i++){
                    let id = assetsToDispose[i][1];
                    if (!processedAssets[id]) {
                        hmrDispose(assetsToDispose[i][0], id);
                        processedAssets[id] = true;
                    }
                }
                // Run accept callbacks. This will also re-execute other disposed assets in topological order.
                processedAssets = {};
                for(let i = 0; i < assetsToAccept.length; i++){
                    let id = assetsToAccept[i][1];
                    if (!processedAssets[id]) {
                        hmrAccept(assetsToAccept[i][0], id);
                        processedAssets[id] = true;
                    }
                }
            } else fullReload();
        }
        if (data.type === "error") {
            // Log parcel errors to console
            for (let ansiDiagnostic of data.diagnostics.ansi){
                let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;
                console.error("\uD83D\uDEA8 [parcel]: " + ansiDiagnostic.message + "\n" + stack + "\n\n" + ansiDiagnostic.hints.join("\n"));
            }
            if (typeof document !== "undefined") {
                // Render the fancy html overlay
                removeErrorOverlay();
                var overlay = createErrorOverlay(data.diagnostics.html);
                // $FlowFixMe
                document.body.appendChild(overlay);
            }
        }
    };
    ws.onerror = function(e) {
        console.error(e.message);
    };
    ws.onclose = function() {
        console.warn("[parcel] \uD83D\uDEA8 Connection to the HMR server was lost");
    };
}
function removeErrorOverlay() {
    var overlay = document.getElementById(OVERLAY_ID);
    if (overlay) {
        overlay.remove();
        console.log("[parcel] ✨ Error resolved");
    }
}
function createErrorOverlay(diagnostics) {
    var overlay = document.createElement("div");
    overlay.id = OVERLAY_ID;
    let errorHTML = '<div style="background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;">';
    for (let diagnostic of diagnostics){
        let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame)=>{
            return `${p}
<a href="/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}" style="text-decoration: underline; color: #888" onclick="fetch(this.href); return false">${frame.location}</a>
${frame.code}`;
        }, "") : diagnostic.stack;
        errorHTML += `
      <div>
        <div style="font-size: 18px; font-weight: bold; margin-top: 20px;">
          🚨 ${diagnostic.message}
        </div>
        <pre>${stack}</pre>
        <div>
          ${diagnostic.hints.map((hint)=>"<div>\uD83D\uDCA1 " + hint + "</div>").join("")}
        </div>
        ${diagnostic.documentation ? `<div>📝 <a style="color: violet" href="${diagnostic.documentation}" target="_blank">Learn more</a></div>` : ""}
      </div>
    `;
    }
    errorHTML += "</div>";
    overlay.innerHTML = errorHTML;
    return overlay;
}
function fullReload() {
    if ("reload" in location) location.reload();
    else if (extCtx && extCtx.runtime && extCtx.runtime.reload) extCtx.runtime.reload();
}
function getParents(bundle, id) /*: Array<[ParcelRequire, string]> */ {
    var modules = bundle.modules;
    if (!modules) return [];
    var parents = [];
    var k, d, dep;
    for(k in modules)for(d in modules[k][1]){
        dep = modules[k][1][d];
        if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) parents.push([
            bundle,
            k
        ]);
    }
    if (bundle.parent) parents = parents.concat(getParents(bundle.parent, id));
    return parents;
}
function updateLink(link) {
    var href = link.getAttribute("href");
    if (!href) return;
    var newLink = link.cloneNode();
    newLink.onload = function() {
        if (link.parentNode !== null) // $FlowFixMe
        link.parentNode.removeChild(link);
    };
    newLink.setAttribute("href", // $FlowFixMe
    href.split("?")[0] + "?" + Date.now());
    // $FlowFixMe
    link.parentNode.insertBefore(newLink, link.nextSibling);
}
var cssTimeout = null;
function reloadCSS() {
    if (cssTimeout) return;
    cssTimeout = setTimeout(function() {
        var links = document.querySelectorAll('link[rel="stylesheet"]');
        for(var i = 0; i < links.length; i++){
            // $FlowFixMe[incompatible-type]
            var href /*: string */  = links[i].getAttribute("href");
            var hostname = getHostname();
            var servedFromHMRServer = hostname === "localhost" ? new RegExp("^(https?:\\/\\/(0.0.0.0|127.0.0.1)|localhost):" + getPort()).test(href) : href.indexOf(hostname + ":" + getPort());
            var absolute = /^https?:\/\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;
            if (!absolute) updateLink(links[i]);
        }
        cssTimeout = null;
    }, 50);
}
function hmrDownload(asset) {
    if (asset.type === "js") {
        if (typeof document !== "undefined") {
            let script = document.createElement("script");
            script.src = asset.url + "?t=" + Date.now();
            if (asset.outputFormat === "esmodule") script.type = "module";
            return new Promise((resolve, reject)=>{
                var _document$head;
                script.onload = ()=>resolve(script);
                script.onerror = reject;
                (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);
            });
        } else if (typeof importScripts === "function") {
            // Worker scripts
            if (asset.outputFormat === "esmodule") return import(asset.url + "?t=" + Date.now());
            else return new Promise((resolve, reject)=>{
                try {
                    importScripts(asset.url + "?t=" + Date.now());
                    resolve();
                } catch (err) {
                    reject(err);
                }
            });
        }
    }
}
async function hmrApplyUpdates(assets) {
    global.parcelHotUpdate = Object.create(null);
    let scriptsToRemove;
    try {
        // If sourceURL comments aren't supported in eval, we need to load
        // the update from the dev server over HTTP so that stack traces
        // are correct in errors/logs. This is much slower than eval, so
        // we only do it if needed (currently just Safari).
        // https://bugs.webkit.org/show_bug.cgi?id=137297
        // This path is also taken if a CSP disallows eval.
        if (!supportsSourceURL) {
            let promises = assets.map((asset)=>{
                var _hmrDownload;
                return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch((err)=>{
                    // Web extension bugfix for Chromium
                    // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12
                    if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {
                        if (typeof ServiceWorkerGlobalScope != "undefined" && global instanceof ServiceWorkerGlobalScope) {
                            extCtx.runtime.reload();
                            return;
                        }
                        asset.url = extCtx.runtime.getURL("/__parcel_hmr_proxy__?url=" + encodeURIComponent(asset.url + "?t=" + Date.now()));
                        return hmrDownload(asset);
                    }
                    throw err;
                });
            });
            scriptsToRemove = await Promise.all(promises);
        }
        assets.forEach(function(asset) {
            hmrApply(module.bundle.root, asset);
        });
    } finally{
        delete global.parcelHotUpdate;
        if (scriptsToRemove) scriptsToRemove.forEach((script)=>{
            if (script) {
                var _document$head2;
                (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);
            }
        });
    }
}
function hmrApply(bundle /*: ParcelRequire */ , asset /*:  HMRAsset */ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (asset.type === "css") reloadCSS();
    else if (asset.type === "js") {
        let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];
        if (deps) {
            if (modules[asset.id]) {
                // Remove dependencies that are removed and will become orphaned.
                // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.
                let oldDeps = modules[asset.id][1];
                for(let dep in oldDeps)if (!deps[dep] || deps[dep] !== oldDeps[dep]) {
                    let id = oldDeps[dep];
                    let parents = getParents(module.bundle.root, id);
                    if (parents.length === 1) hmrDelete(module.bundle.root, id);
                }
            }
            if (supportsSourceURL) // Global eval. We would use `new Function` here but browser
            // support for source maps is better with eval.
            (0, eval)(asset.output);
            // $FlowFixMe
            let fn = global.parcelHotUpdate[asset.id];
            modules[asset.id] = [
                fn,
                deps
            ];
        } else if (bundle.parent) hmrApply(bundle.parent, asset);
    }
}
function hmrDelete(bundle, id) {
    let modules = bundle.modules;
    if (!modules) return;
    if (modules[id]) {
        // Collect dependencies that will become orphaned when this module is deleted.
        let deps = modules[id][1];
        let orphans = [];
        for(let dep in deps){
            let parents = getParents(module.bundle.root, deps[dep]);
            if (parents.length === 1) orphans.push(deps[dep]);
        }
        // Delete the module. This must be done before deleting dependencies in case of circular dependencies.
        delete modules[id];
        delete bundle.cache[id];
        // Now delete the orphans.
        orphans.forEach((id)=>{
            hmrDelete(module.bundle.root, id);
        });
    } else if (bundle.parent) hmrDelete(bundle.parent, id);
}
function hmrAcceptCheck(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    if (hmrAcceptCheckOne(bundle, id, depsByBundle)) return true;
    // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.
    let parents = getParents(module.bundle.root, id);
    let accepted = false;
    while(parents.length > 0){
        let v = parents.shift();
        let a = hmrAcceptCheckOne(v[0], v[1], null);
        if (a) // If this parent accepts, stop traversing upward, but still consider siblings.
        accepted = true;
        else {
            // Otherwise, queue the parents in the next level upward.
            let p = getParents(module.bundle.root, v[1]);
            if (p.length === 0) {
                // If there are no parents, then we've reached an entry without accepting. Reload.
                accepted = false;
                break;
            }
            parents.push(...p);
        }
    }
    return accepted;
}
function hmrAcceptCheckOne(bundle /*: ParcelRequire */ , id /*: string */ , depsByBundle /*: ?{ [string]: { [string]: string } }*/ ) {
    var modules = bundle.modules;
    if (!modules) return;
    if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {
        // If we reached the root bundle without finding where the asset should go,
        // there's nothing to do. Mark as "accepted" so we don't reload the page.
        if (!bundle.parent) return true;
        return hmrAcceptCheck(bundle.parent, id, depsByBundle);
    }
    if (checkedAssets[id]) return true;
    checkedAssets[id] = true;
    var cached = bundle.cache[id];
    assetsToDispose.push([
        bundle,
        id
    ]);
    if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {
        assetsToAccept.push([
            bundle,
            id
        ]);
        return true;
    }
}
function hmrDispose(bundle /*: ParcelRequire */ , id /*: string */ ) {
    var cached = bundle.cache[id];
    bundle.hotData[id] = {};
    if (cached && cached.hot) cached.hot.data = bundle.hotData[id];
    if (cached && cached.hot && cached.hot._disposeCallbacks.length) cached.hot._disposeCallbacks.forEach(function(cb) {
        cb(bundle.hotData[id]);
    });
    delete bundle.cache[id];
}
function hmrAccept(bundle /*: ParcelRequire */ , id /*: string */ ) {
    // Execute the module.
    bundle(id);
    // Run the accept callbacks in the new version of the module.
    var cached = bundle.cache[id];
    if (cached && cached.hot && cached.hot._acceptCallbacks.length) cached.hot._acceptCallbacks.forEach(function(cb) {
        var assetsToAlsoAccept = cb(function() {
            return getParents(module.bundle.root, id);
        });
        if (assetsToAlsoAccept && assetsToAccept.length) {
            assetsToAlsoAccept.forEach(function(a) {
                hmrDispose(a[0], a[1]);
            });
            // $FlowFixMe[method-unbinding]
            assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);
        }
    });
}

},{}],"ipli0":[function(require,module,exports) {
"use strict";
(self.webpackChunkstarboard_notebook = self.webpackChunkstarboard_notebook || []).push([
    [
        "node_modules_monaco-editor_esm_vs_language_typescript_tsMode_js"
    ],
    {
        "./node_modules/monaco-editor/esm/vs/language/typescript/tsMode.js": (se, P, L)=>{
            L.r(P), L.d(P, {
                getJavaScriptWorker: ()=>ne,
                getTypeScriptWorker: ()=>ie,
                setupJavaScript: ()=>re,
                setupTypeScript: ()=>te
            });
            var l = L("./node_modules/monaco-editor/esm/vs/language/typescript/fillers/monaco-editor-core.js"), E = function(t, r, e, i) {
                function a(n) {
                    return n instanceof e ? n : new e(function(o) {
                        o(n);
                    });
                }
                return new (e || (e = Promise))(function(n, o) {
                    function c(u) {
                        try {
                            s(i.next(u));
                        } catch (d) {
                            o(d);
                        }
                    }
                    function f(u) {
                        try {
                            s(i.throw(u));
                        } catch (d) {
                            o(d);
                        }
                    }
                    function s(u) {
                        u.done ? n(u.value) : a(u.value).then(c, f);
                    }
                    s((i = i.apply(t, r || [])).next());
                });
            }, W = function(t, r) {
                var e = {
                    label: 0,
                    sent: function() {
                        if (n[0] & 1) throw n[1];
                        return n[1];
                    },
                    trys: [],
                    ops: []
                }, i, a, n, o;
                return o = {
                    next: c(0),
                    throw: c(1),
                    return: c(2)
                }, typeof Symbol == "function" && (o[Symbol.iterator] = function() {
                    return this;
                }), o;
                function c(s) {
                    return function(u) {
                        return f([
                            s,
                            u
                        ]);
                    };
                }
                function f(s) {
                    if (i) throw new TypeError("Generator is already executing.");
                    for(; e;)try {
                        if (i = 1, a && (n = s[0] & 2 ? a.return : s[0] ? a.throw || ((n = a.return) && n.call(a), 0) : a.next) && !(n = n.call(a, s[1])).done) return n;
                        switch(a = 0, n && (s = [
                            s[0] & 2,
                            n.value
                        ]), s[0]){
                            case 0:
                            case 1:
                                n = s;
                                break;
                            case 4:
                                return e.label++, {
                                    value: s[1],
                                    done: !1
                                };
                            case 5:
                                e.label++, a = s[1], s = [
                                    0
                                ];
                                continue;
                            case 7:
                                s = e.ops.pop(), e.trys.pop();
                                continue;
                            default:
                                if (n = e.trys, !(n = n.length > 0 && n[n.length - 1]) && (s[0] === 6 || s[0] === 2)) {
                                    e = 0;
                                    continue;
                                }
                                if (s[0] === 3 && (!n || s[1] > n[0] && s[1] < n[3])) {
                                    e.label = s[1];
                                    break;
                                }
                                if (s[0] === 6 && e.label < n[1]) {
                                    e.label = n[1], n = s;
                                    break;
                                }
                                if (n && e.label < n[2]) {
                                    e.label = n[2], e.ops.push(s);
                                    break;
                                }
                                n[2] && e.ops.pop(), e.trys.pop();
                                continue;
                        }
                        s = r.call(t, e);
                    } catch (u) {
                        s = [
                            6,
                            u
                        ], a = 0;
                    } finally{
                        i = n = 0;
                    }
                    if (s[0] & 5) throw s[1];
                    return {
                        value: s[0] ? s[1] : void 0,
                        done: !0
                    };
                }
            }, H = function() {
                function t(r, e) {
                    var i = this;
                    this._modeId = r, this._defaults = e, this._worker = null, this._client = null, this._configChangeListener = this._defaults.onDidChange(function() {
                        return i._stopWorker();
                    }), this._updateExtraLibsToken = 0, this._extraLibsChangeListener = this._defaults.onDidExtraLibsChange(function() {
                        return i._updateExtraLibs();
                    });
                }
                return t.prototype._stopWorker = function() {
                    this._worker && (this._worker.dispose(), this._worker = null), this._client = null;
                }, t.prototype.dispose = function() {
                    this._configChangeListener.dispose(), this._extraLibsChangeListener.dispose(), this._stopWorker();
                }, t.prototype._updateExtraLibs = function() {
                    return E(this, void 0, void 0, function() {
                        var r, e;
                        return W(this, function(i) {
                            switch(i.label){
                                case 0:
                                    return this._worker ? (r = ++this._updateExtraLibsToken, [
                                        4,
                                        this._worker.getProxy()
                                    ]) : [
                                        2
                                    ];
                                case 1:
                                    return e = i.sent(), this._updateExtraLibsToken !== r ? [
                                        2
                                    ] : (e.updateExtraLibs(this._defaults.getExtraLibs()), [
                                        2
                                    ]);
                            }
                        });
                    });
                }, t.prototype._getClient = function() {
                    var r = this;
                    if (!this._client) {
                        this._worker = l.j6.createWebWorker({
                            moduleId: "vs/language/typescript/tsWorker",
                            label: this._modeId,
                            keepIdleModels: !0,
                            createData: {
                                compilerOptions: this._defaults.getCompilerOptions(),
                                extraLibs: this._defaults.getExtraLibs(),
                                customWorkerPath: this._defaults.workerOptions.customWorkerPath
                            }
                        });
                        var e = this._worker.getProxy();
                        this._defaults.getEagerModelSync() && (e = e.then(function(i) {
                            return r._worker ? r._worker.withSyncedResources(l.j6.getModels().filter(function(a) {
                                return a.getModeId() === r._modeId;
                            }).map(function(a) {
                                return a.uri;
                            })) : i;
                        })), this._client = e;
                    }
                    return this._client;
                }, t.prototype.getLanguageServiceWorker = function() {
                    for(var r = this, e = [], i = 0; i < arguments.length; i++)e[i] = arguments[i];
                    var a;
                    return this._getClient().then(function(n) {
                        a = n;
                    }).then(function(n) {
                        if (r._worker) return r._worker.withSyncedResources(e);
                    }).then(function(n) {
                        return a;
                    });
                }, t;
            }(), g = {};
            g["lib.d.ts"] = !0, g["lib.dom.d.ts"] = !0, g["lib.dom.iterable.d.ts"] = !0, g["lib.es2015.collection.d.ts"] = !0, g["lib.es2015.core.d.ts"] = !0, g["lib.es2015.d.ts"] = !0, g["lib.es2015.generator.d.ts"] = !0, g["lib.es2015.iterable.d.ts"] = !0, g["lib.es2015.promise.d.ts"] = !0, g["lib.es2015.proxy.d.ts"] = !0, g["lib.es2015.reflect.d.ts"] = !0, g["lib.es2015.symbol.d.ts"] = !0, g["lib.es2015.symbol.wellknown.d.ts"] = !0, g["lib.es2016.array.include.d.ts"] = !0, g["lib.es2016.d.ts"] = !0, g["lib.es2016.full.d.ts"] = !0, g["lib.es2017.d.ts"] = !0, g["lib.es2017.full.d.ts"] = !0, g["lib.es2017.intl.d.ts"] = !0, g["lib.es2017.object.d.ts"] = !0, g["lib.es2017.sharedmemory.d.ts"] = !0, g["lib.es2017.string.d.ts"] = !0, g["lib.es2017.typedarrays.d.ts"] = !0, g["lib.es2018.asyncgenerator.d.ts"] = !0, g["lib.es2018.asynciterable.d.ts"] = !0, g["lib.es2018.d.ts"] = !0, g["lib.es2018.full.d.ts"] = !0, g["lib.es2018.intl.d.ts"] = !0, g["lib.es2018.promise.d.ts"] = !0, g["lib.es2018.regexp.d.ts"] = !0, g["lib.es2019.array.d.ts"] = !0, g["lib.es2019.d.ts"] = !0, g["lib.es2019.full.d.ts"] = !0, g["lib.es2019.object.d.ts"] = !0, g["lib.es2019.string.d.ts"] = !0, g["lib.es2019.symbol.d.ts"] = !0, g["lib.es2020.bigint.d.ts"] = !0, g["lib.es2020.d.ts"] = !0, g["lib.es2020.full.d.ts"] = !0, g["lib.es2020.intl.d.ts"] = !0, g["lib.es2020.promise.d.ts"] = !0, g["lib.es2020.sharedmemory.d.ts"] = !0, g["lib.es2020.string.d.ts"] = !0, g["lib.es2020.symbol.wellknown.d.ts"] = !0, g["lib.es5.d.ts"] = !0, g["lib.es6.d.ts"] = !0, g["lib.esnext.d.ts"] = !0, g["lib.esnext.full.d.ts"] = !0, g["lib.esnext.intl.d.ts"] = !0, g["lib.esnext.promise.d.ts"] = !0, g["lib.esnext.string.d.ts"] = !0, g["lib.esnext.weakref.d.ts"] = !0, g["lib.scripthost.d.ts"] = !0, g["lib.webworker.d.ts"] = !0, g["lib.webworker.importscripts.d.ts"] = !0, g["lib.webworker.iterable.d.ts"] = !0;
            var x = function() {
                var t = function(r, e) {
                    return t = Object.setPrototypeOf || ({
                        __proto__: []
                    }) instanceof Array && function(i, a) {
                        i.__proto__ = a;
                    } || function(i, a) {
                        for(var n in a)Object.prototype.hasOwnProperty.call(a, n) && (i[n] = a[n]);
                    }, t(r, e);
                };
                return function(r, e) {
                    if (typeof e != "function" && e !== null) throw new TypeError("Class extends value " + String(e) + " is not a constructor or null");
                    t(r, e);
                    function i() {
                        this.constructor = r;
                    }
                    r.prototype = e === null ? Object.create(e) : (i.prototype = e.prototype, new i);
                };
            }(), k = function(t, r, e, i) {
                function a(n) {
                    return n instanceof e ? n : new e(function(o) {
                        o(n);
                    });
                }
                return new (e || (e = Promise))(function(n, o) {
                    function c(u) {
                        try {
                            s(i.next(u));
                        } catch (d) {
                            o(d);
                        }
                    }
                    function f(u) {
                        try {
                            s(i.throw(u));
                        } catch (d) {
                            o(d);
                        }
                    }
                    function s(u) {
                        u.done ? n(u.value) : a(u.value).then(c, f);
                    }
                    s((i = i.apply(t, r || [])).next());
                });
            }, _ = function(t, r) {
                var e = {
                    label: 0,
                    sent: function() {
                        if (n[0] & 1) throw n[1];
                        return n[1];
                    },
                    trys: [],
                    ops: []
                }, i, a, n, o;
                return o = {
                    next: c(0),
                    throw: c(1),
                    return: c(2)
                }, typeof Symbol == "function" && (o[Symbol.iterator] = function() {
                    return this;
                }), o;
                function c(s) {
                    return function(u) {
                        return f([
                            s,
                            u
                        ]);
                    };
                }
                function f(s) {
                    if (i) throw new TypeError("Generator is already executing.");
                    for(; e;)try {
                        if (i = 1, a && (n = s[0] & 2 ? a.return : s[0] ? a.throw || ((n = a.return) && n.call(a), 0) : a.next) && !(n = n.call(a, s[1])).done) return n;
                        switch(a = 0, n && (s = [
                            s[0] & 2,
                            n.value
                        ]), s[0]){
                            case 0:
                            case 1:
                                n = s;
                                break;
                            case 4:
                                return e.label++, {
                                    value: s[1],
                                    done: !1
                                };
                            case 5:
                                e.label++, a = s[1], s = [
                                    0
                                ];
                                continue;
                            case 7:
                                s = e.ops.pop(), e.trys.pop();
                                continue;
                            default:
                                if (n = e.trys, !(n = n.length > 0 && n[n.length - 1]) && (s[0] === 6 || s[0] === 2)) {
                                    e = 0;
                                    continue;
                                }
                                if (s[0] === 3 && (!n || s[1] > n[0] && s[1] < n[3])) {
                                    e.label = s[1];
                                    break;
                                }
                                if (s[0] === 6 && e.label < n[1]) {
                                    e.label = n[1], n = s;
                                    break;
                                }
                                if (n && e.label < n[2]) {
                                    e.label = n[2], e.ops.push(s);
                                    break;
                                }
                                n[2] && e.ops.pop(), e.trys.pop();
                                continue;
                        }
                        s = r.call(t, e);
                    } catch (u) {
                        s = [
                            6,
                            u
                        ], a = 0;
                    } finally{
                        i = n = 0;
                    }
                    if (s[0] & 5) throw s[1];
                    return {
                        value: s[0] ? s[1] : void 0,
                        done: !0
                    };
                }
            }, D;
            (function(t) {
                t[t.None = 0] = "None", t[t.Block = 1] = "Block", t[t.Smart = 2] = "Smart";
            })(D || (D = {}));
            function T(t, r, e) {
                if (e === void 0 && (e = 0), typeof t == "string") return t;
                if (t === void 0) return "";
                var i = "";
                if (e) {
                    i += r;
                    for(var a = 0; a < e; a++)i += "  ";
                }
                if (i += t.messageText, e++, t.next) for(var n = 0, o = t.next; n < o.length; n++){
                    var c = o[n];
                    i += T(c, r, e);
                }
                return i;
            }
            function C(t) {
                return t ? t.map(function(r) {
                    return r.text;
                }).join("") : "";
            }
            var M = function() {
                function t(r) {
                    this._worker = r;
                }
                return t.prototype._textSpanToRange = function(r, e) {
                    var i = r.getPositionAt(e.start), a = r.getPositionAt(e.start + e.length), n = i.lineNumber, o = i.column, c = a.lineNumber, f = a.column;
                    return {
                        startLineNumber: n,
                        startColumn: o,
                        endLineNumber: c,
                        endColumn: f
                    };
                }, t;
            }(), V = function() {
                function t(r) {
                    this._worker = r, this._libFiles = {}, this._hasFetchedLibFiles = !1, this._fetchLibFilesPromise = null;
                }
                return t.prototype.isLibFile = function(r) {
                    return r && r.path.indexOf("/lib.") === 0 ? !!g[r.path.slice(1)] : !1;
                }, t.prototype.getOrCreateModel = function(r) {
                    var e = l.j6.getModel(r);
                    return e || (this.isLibFile(r) && this._hasFetchedLibFiles ? l.j6.createModel(this._libFiles[r.path.slice(1)], "typescript", r) : null);
                }, t.prototype._containsLibFile = function(r) {
                    for(var e = 0, i = r; e < i.length; e++){
                        var a = i[e];
                        if (this.isLibFile(a)) return !0;
                    }
                    return !1;
                }, t.prototype.fetchLibFilesIfNecessary = function(r) {
                    return k(this, void 0, void 0, function() {
                        return _(this, function(e) {
                            switch(e.label){
                                case 0:
                                    return this._containsLibFile(r) ? [
                                        4,
                                        this._fetchLibFiles()
                                    ] : [
                                        2
                                    ];
                                case 1:
                                    return e.sent(), [
                                        2
                                    ];
                            }
                        });
                    });
                }, t.prototype._fetchLibFiles = function() {
                    var r = this;
                    return this._fetchLibFilesPromise || (this._fetchLibFilesPromise = this._worker().then(function(e) {
                        return e.getLibFiles();
                    }).then(function(e) {
                        r._hasFetchedLibFiles = !0, r._libFiles = e;
                    })), this._fetchLibFilesPromise;
                }, t;
            }(), F;
            (function(t) {
                t[t.Warning = 0] = "Warning", t[t.Error = 1] = "Error", t[t.Suggestion = 2] = "Suggestion", t[t.Message = 3] = "Message";
            })(F || (F = {}));
            var B = function(t) {
                x(r, t);
                function r(e, i, a, n) {
                    var o = t.call(this, n) || this;
                    o._libFiles = e, o._defaults = i, o._selector = a, o._disposables = [], o._listener = Object.create(null);
                    var c = function(u) {
                        if (u.getModeId() === a) {
                            var d, p = u.onDidChangeContent(function() {
                                clearTimeout(d), d = setTimeout(function() {
                                    return o._doValidate(u);
                                }, 500);
                            });
                            o._listener[u.uri.toString()] = {
                                dispose: function() {
                                    p.dispose(), clearTimeout(d);
                                }
                            }, o._doValidate(u);
                        }
                    }, f = function(u) {
                        l.j6.setModelMarkers(u, o._selector, []);
                        var d = u.uri.toString();
                        o._listener[d] && (o._listener[d].dispose(), delete o._listener[d]);
                    };
                    o._disposables.push(l.j6.onDidCreateModel(c)), o._disposables.push(l.j6.onWillDisposeModel(f)), o._disposables.push(l.j6.onDidChangeModelLanguage(function(u) {
                        f(u.model), c(u.model);
                    })), o._disposables.push({
                        dispose: function() {
                            for(var u = 0, d = l.j6.getModels(); u < d.length; u++){
                                var p = d[u];
                                f(p);
                            }
                        }
                    });
                    var s = function() {
                        for(var u = 0, d = l.j6.getModels(); u < d.length; u++){
                            var p = d[u];
                            f(p), c(p);
                        }
                    };
                    return o._disposables.push(o._defaults.onDidChange(s)), o._disposables.push(o._defaults.onDidExtraLibsChange(s)), l.j6.getModels().forEach(c), o;
                }
                return r.prototype.dispose = function() {
                    this._disposables.forEach(function(e) {
                        return e && e.dispose();
                    }), this._disposables = [];
                }, r.prototype._doValidate = function(e) {
                    return k(this, void 0, void 0, function() {
                        var i, a, n, o, c, f, s, u, d, p = this;
                        return _(this, function(b) {
                            switch(b.label){
                                case 0:
                                    return [
                                        4,
                                        this._worker(e.uri)
                                    ];
                                case 1:
                                    return i = b.sent(), e.isDisposed() ? [
                                        2
                                    ] : (a = [], n = this._defaults.getDiagnosticsOptions(), o = n.noSyntaxValidation, c = n.noSemanticValidation, f = n.noSuggestionDiagnostics, o || a.push(i.getSyntacticDiagnostics(e.uri.toString())), c || a.push(i.getSemanticDiagnostics(e.uri.toString())), f || a.push(i.getSuggestionDiagnostics(e.uri.toString())), [
                                        4,
                                        Promise.all(a)
                                    ]);
                                case 2:
                                    return s = b.sent(), !s || e.isDisposed() ? [
                                        2
                                    ] : (u = s.reduce(function(h, m) {
                                        return m.concat(h);
                                    }, []).filter(function(h) {
                                        return (p._defaults.getDiagnosticsOptions().diagnosticCodesToIgnore || []).indexOf(h.code) === -1;
                                    }), d = u.map(function(h) {
                                        return h.relatedInformation || [];
                                    }).reduce(function(h, m) {
                                        return m.concat(h);
                                    }, []).map(function(h) {
                                        return h.file ? l.Sf.parse(h.file.fileName) : null;
                                    }), [
                                        4,
                                        this._libFiles.fetchLibFilesIfNecessary(d)
                                    ]);
                                case 3:
                                    return b.sent(), e.isDisposed() ? [
                                        2
                                    ] : (l.j6.setModelMarkers(e, this._selector, u.map(function(h) {
                                        return p._convertDiagnostics(e, h);
                                    })), [
                                        2
                                    ]);
                            }
                        });
                    });
                }, r.prototype._convertDiagnostics = function(e, i) {
                    var a = i.start || 0, n = i.length || 1, o = e.getPositionAt(a), c = o.lineNumber, f = o.column, s = e.getPositionAt(a + n), u = s.lineNumber, d = s.column, p = [];
                    return i.reportsUnnecessary && p.push(l.eB.Unnecessary), i.reportsDeprecated && p.push(l.eB.Deprecated), {
                        severity: this._tsDiagnosticCategoryToMarkerSeverity(i.category),
                        startLineNumber: c,
                        startColumn: f,
                        endLineNumber: u,
                        endColumn: d,
                        message: T(i.messageText, `
`),
                        code: i.code.toString(),
                        tags: p,
                        relatedInformation: this._convertRelatedInformation(e, i.relatedInformation)
                    };
                }, r.prototype._convertRelatedInformation = function(e, i) {
                    var a = this;
                    if (!!i) {
                        var n = [];
                        return i.forEach(function(o) {
                            var c = e;
                            if (o.file) {
                                var f = l.Sf.parse(o.file.fileName);
                                c = a._libFiles.getOrCreateModel(f);
                            }
                            if (!!c) {
                                var s = o.start || 0, u = o.length || 1, d = c.getPositionAt(s), p = d.lineNumber, b = d.column, h = c.getPositionAt(s + u), m = h.lineNumber, y = h.column;
                                n.push({
                                    resource: c.uri,
                                    startLineNumber: p,
                                    startColumn: b,
                                    endLineNumber: m,
                                    endColumn: y,
                                    message: T(o.messageText, `
`)
                                });
                            }
                        }), n;
                    }
                }, r.prototype._tsDiagnosticCategoryToMarkerSeverity = function(e) {
                    switch(e){
                        case F.Error:
                            return l.ZL.Error;
                        case F.Message:
                            return l.ZL.Info;
                        case F.Warning:
                            return l.ZL.Warning;
                        case F.Suggestion:
                            return l.ZL.Hint;
                    }
                    return l.ZL.Info;
                }, r;
            }(M), U = function(t) {
                x(r, t);
                function r() {
                    return t !== null && t.apply(this, arguments) || this;
                }
                return Object.defineProperty(r.prototype, "triggerCharacters", {
                    get: function() {
                        return [
                            "."
                        ];
                    },
                    enumerable: !1,
                    configurable: !0
                }), r.prototype.provideCompletionItems = function(e, i, a, n) {
                    return k(this, void 0, void 0, function() {
                        var o, c, f, s, u, d, p;
                        return _(this, function(b) {
                            switch(b.label){
                                case 0:
                                    return o = e.getWordUntilPosition(i), c = new l.e6(i.lineNumber, o.startColumn, i.lineNumber, o.endColumn), f = e.uri, s = e.getOffsetAt(i), [
                                        4,
                                        this._worker(f)
                                    ];
                                case 1:
                                    return u = b.sent(), e.isDisposed() ? [
                                        2
                                    ] : [
                                        4,
                                        u.getCompletionsAtPosition(f.toString(), s)
                                    ];
                                case 2:
                                    return d = b.sent(), !d || e.isDisposed() ? [
                                        2
                                    ] : (p = d.entries.map(function(h) {
                                        var m, y = c;
                                        if (h.replacementSpan) {
                                            var w = e.getPositionAt(h.replacementSpan.start), A = e.getPositionAt(h.replacementSpan.start + h.replacementSpan.length);
                                            y = new l.e6(w.lineNumber, w.column, A.lineNumber, A.column);
                                        }
                                        var K = [];
                                        return ((m = h.kindModifiers) === null || m === void 0 ? void 0 : m.indexOf("deprecated")) !== -1 && K.push(l.Mj.CompletionItemTag.Deprecated), {
                                            uri: f,
                                            position: i,
                                            offset: s,
                                            range: y,
                                            label: h.name,
                                            insertText: h.name,
                                            sortText: h.sortText,
                                            kind: r.convertKind(h.kind),
                                            tags: K
                                        };
                                    }), [
                                        2,
                                        {
                                            suggestions: p
                                        }
                                    ]);
                            }
                        });
                    });
                }, r.prototype.resolveCompletionItem = function(e, i) {
                    return k(this, void 0, void 0, function() {
                        var a, n, o, c, f, s;
                        return _(this, function(u) {
                            switch(u.label){
                                case 0:
                                    return a = e, n = a.uri, o = a.position, c = a.offset, [
                                        4,
                                        this._worker(n)
                                    ];
                                case 1:
                                    return f = u.sent(), [
                                        4,
                                        f.getCompletionEntryDetails(n.toString(), c, a.label)
                                    ];
                                case 2:
                                    return s = u.sent(), s ? [
                                        2,
                                        {
                                            uri: n,
                                            position: o,
                                            label: s.name,
                                            kind: r.convertKind(s.kind),
                                            detail: C(s.displayParts),
                                            documentation: {
                                                value: r.createDocumentationString(s)
                                            }
                                        }
                                    ] : [
                                        2,
                                        a
                                    ];
                            }
                        });
                    });
                }, r.convertKind = function(e) {
                    switch(e){
                        case v.primitiveType:
                        case v.keyword:
                            return l.Mj.CompletionItemKind.Keyword;
                        case v.variable:
                        case v.localVariable:
                            return l.Mj.CompletionItemKind.Variable;
                        case v.memberVariable:
                        case v.memberGetAccessor:
                        case v.memberSetAccessor:
                            return l.Mj.CompletionItemKind.Field;
                        case v.function:
                        case v.memberFunction:
                        case v.constructSignature:
                        case v.callSignature:
                        case v.indexSignature:
                            return l.Mj.CompletionItemKind.Function;
                        case v.enum:
                            return l.Mj.CompletionItemKind.Enum;
                        case v.module:
                            return l.Mj.CompletionItemKind.Module;
                        case v.class:
                            return l.Mj.CompletionItemKind.Class;
                        case v.interface:
                            return l.Mj.CompletionItemKind.Interface;
                        case v.warning:
                            return l.Mj.CompletionItemKind.File;
                    }
                    return l.Mj.CompletionItemKind.Property;
                }, r.createDocumentationString = function(e) {
                    var i = C(e.documentation);
                    if (e.tags) for(var a = 0, n = e.tags; a < n.length; a++){
                        var o = n[a];
                        i += `

` + I(o);
                    }
                    return i;
                }, r;
            }(M);
            function I(t) {
                var r = "*@" + t.name + "*";
                if (t.name === "param" && t.text) {
                    var e = t.text.split(" "), i = e[0], a = e.slice(1);
                    r += "`" + i + "`", a.length > 0 && (r += " — " + a.join(" "));
                } else t.text && (r += " — " + t.text);
                return r;
            }
            var z = function(t) {
                x(r, t);
                function r() {
                    var e = t !== null && t.apply(this, arguments) || this;
                    return e.signatureHelpTriggerCharacters = [
                        "(",
                        ","
                    ], e;
                }
                return r._toSignatureHelpTriggerReason = function(e) {
                    switch(e.triggerKind){
                        case l.Mj.SignatureHelpTriggerKind.TriggerCharacter:
                            return e.triggerCharacter ? e.isRetrigger ? {
                                kind: "retrigger",
                                triggerCharacter: e.triggerCharacter
                            } : {
                                kind: "characterTyped",
                                triggerCharacter: e.triggerCharacter
                            } : {
                                kind: "invoked"
                            };
                        case l.Mj.SignatureHelpTriggerKind.ContentChange:
                            return e.isRetrigger ? {
                                kind: "retrigger"
                            } : {
                                kind: "invoked"
                            };
                        case l.Mj.SignatureHelpTriggerKind.Invoke:
                        default:
                            return {
                                kind: "invoked"
                            };
                    }
                }, r.prototype.provideSignatureHelp = function(e, i, a, n) {
                    return k(this, void 0, void 0, function() {
                        var o, c, f, s, u;
                        return _(this, function(d) {
                            switch(d.label){
                                case 0:
                                    return o = e.uri, c = e.getOffsetAt(i), [
                                        4,
                                        this._worker(o)
                                    ];
                                case 1:
                                    return f = d.sent(), e.isDisposed() ? [
                                        2
                                    ] : [
                                        4,
                                        f.getSignatureHelpItems(o.toString(), c, {
                                            triggerReason: r._toSignatureHelpTriggerReason(n)
                                        })
                                    ];
                                case 2:
                                    return s = d.sent(), !s || e.isDisposed() ? [
                                        2
                                    ] : (u = {
                                        activeSignature: s.selectedItemIndex,
                                        activeParameter: s.argumentIndex,
                                        signatures: []
                                    }, s.items.forEach(function(p) {
                                        var b = {
                                            label: "",
                                            parameters: []
                                        };
                                        b.documentation = {
                                            value: C(p.documentation)
                                        }, b.label += C(p.prefixDisplayParts), p.parameters.forEach(function(h, m, y) {
                                            var w = C(h.displayParts), A = {
                                                label: w,
                                                documentation: {
                                                    value: C(h.documentation)
                                                }
                                            };
                                            b.label += w, b.parameters.push(A), m < y.length - 1 && (b.label += C(p.separatorDisplayParts));
                                        }), b.label += C(p.suffixDisplayParts), u.signatures.push(b);
                                    }), [
                                        2,
                                        {
                                            value: u,
                                            dispose: function() {}
                                        }
                                    ]);
                            }
                        });
                    });
                }, r;
            }(M), G = function(t) {
                x(r, t);
                function r() {
                    return t !== null && t.apply(this, arguments) || this;
                }
                return r.prototype.provideHover = function(e, i, a) {
                    return k(this, void 0, void 0, function() {
                        var n, o, c, f, s, u, d;
                        return _(this, function(p) {
                            switch(p.label){
                                case 0:
                                    return n = e.uri, o = e.getOffsetAt(i), [
                                        4,
                                        this._worker(n)
                                    ];
                                case 1:
                                    return c = p.sent(), e.isDisposed() ? [
                                        2
                                    ] : [
                                        4,
                                        c.getQuickInfoAtPosition(n.toString(), o)
                                    ];
                                case 2:
                                    return f = p.sent(), !f || e.isDisposed() ? [
                                        2
                                    ] : (s = C(f.documentation), u = f.tags ? f.tags.map(function(b) {
                                        return I(b);
                                    }).join(`  

`) : "", d = C(f.displayParts), [
                                        2,
                                        {
                                            range: this._textSpanToRange(e, f.textSpan),
                                            contents: [
                                                {
                                                    value: "```typescript\n" + d + "\n```\n"
                                                },
                                                {
                                                    value: s + (u ? `

` + u : "")
                                                }
                                            ]
                                        }
                                    ]);
                            }
                        });
                    });
                }, r;
            }(M), J = function(t) {
                x(r, t);
                function r() {
                    return t !== null && t.apply(this, arguments) || this;
                }
                return r.prototype.provideDocumentHighlights = function(e, i, a) {
                    return k(this, void 0, void 0, function() {
                        var n, o, c, f, s = this;
                        return _(this, function(u) {
                            switch(u.label){
                                case 0:
                                    return n = e.uri, o = e.getOffsetAt(i), [
                                        4,
                                        this._worker(n)
                                    ];
                                case 1:
                                    return c = u.sent(), e.isDisposed() ? [
                                        2
                                    ] : [
                                        4,
                                        c.getOccurrencesAtPosition(n.toString(), o)
                                    ];
                                case 2:
                                    return f = u.sent(), !f || e.isDisposed() ? [
                                        2
                                    ] : [
                                        2,
                                        f.map(function(d) {
                                            return {
                                                range: s._textSpanToRange(e, d.textSpan),
                                                kind: d.isWriteAccess ? l.Mj.DocumentHighlightKind.Write : l.Mj.DocumentHighlightKind.Text
                                            };
                                        })
                                    ];
                            }
                        });
                    });
                }, r;
            }(M), Z = function(t) {
                x(r, t);
                function r(e, i) {
                    var a = t.call(this, i) || this;
                    return a._libFiles = e, a;
                }
                return r.prototype.provideDefinition = function(e, i, a) {
                    return k(this, void 0, void 0, function() {
                        var n, o, c, f, s, u, d, p, b, h;
                        return _(this, function(m) {
                            switch(m.label){
                                case 0:
                                    return n = e.uri, o = e.getOffsetAt(i), [
                                        4,
                                        this._worker(n)
                                    ];
                                case 1:
                                    return c = m.sent(), e.isDisposed() ? [
                                        2
                                    ] : [
                                        4,
                                        c.getDefinitionAtPosition(n.toString(), o)
                                    ];
                                case 2:
                                    return f = m.sent(), !f || e.isDisposed() ? [
                                        2
                                    ] : [
                                        4,
                                        this._libFiles.fetchLibFilesIfNecessary(f.map(function(y) {
                                            return l.Sf.parse(y.fileName);
                                        }))
                                    ];
                                case 3:
                                    if (m.sent(), e.isDisposed()) return [
                                        2
                                    ];
                                    for(s = [], u = 0, d = f; u < d.length; u++)p = d[u], b = l.Sf.parse(p.fileName), h = this._libFiles.getOrCreateModel(b), h && s.push({
                                        uri: b,
                                        range: this._textSpanToRange(h, p.textSpan)
                                    });
                                    return [
                                        2,
                                        s
                                    ];
                            }
                        });
                    });
                }, r;
            }(M), Q = function(t) {
                x(r, t);
                function r(e, i) {
                    var a = t.call(this, i) || this;
                    return a._libFiles = e, a;
                }
                return r.prototype.provideReferences = function(e, i, a, n) {
                    return k(this, void 0, void 0, function() {
                        var o, c, f, s, u, d, p, b, h, m;
                        return _(this, function(y) {
                            switch(y.label){
                                case 0:
                                    return o = e.uri, c = e.getOffsetAt(i), [
                                        4,
                                        this._worker(o)
                                    ];
                                case 1:
                                    return f = y.sent(), e.isDisposed() ? [
                                        2
                                    ] : [
                                        4,
                                        f.getReferencesAtPosition(o.toString(), c)
                                    ];
                                case 2:
                                    return s = y.sent(), !s || e.isDisposed() ? [
                                        2
                                    ] : [
                                        4,
                                        this._libFiles.fetchLibFilesIfNecessary(s.map(function(w) {
                                            return l.Sf.parse(w.fileName);
                                        }))
                                    ];
                                case 3:
                                    if (y.sent(), e.isDisposed()) return [
                                        2
                                    ];
                                    for(u = [], d = 0, p = s; d < p.length; d++)b = p[d], h = l.Sf.parse(b.fileName), m = this._libFiles.getOrCreateModel(h), m && u.push({
                                        uri: h,
                                        range: this._textSpanToRange(m, b.textSpan)
                                    });
                                    return [
                                        2,
                                        u
                                    ];
                            }
                        });
                    });
                }, r;
            }(M), X = function(t) {
                x(r, t);
                function r() {
                    return t !== null && t.apply(this, arguments) || this;
                }
                return r.prototype.provideDocumentSymbols = function(e, i) {
                    return k(this, void 0, void 0, function() {
                        var a, n, o, c, f, s = this;
                        return _(this, function(u) {
                            switch(u.label){
                                case 0:
                                    return a = e.uri, [
                                        4,
                                        this._worker(a)
                                    ];
                                case 1:
                                    return n = u.sent(), e.isDisposed() ? [
                                        2
                                    ] : [
                                        4,
                                        n.getNavigationBarItems(a.toString())
                                    ];
                                case 2:
                                    return o = u.sent(), !o || e.isDisposed() ? [
                                        2
                                    ] : (c = function(d, p, b) {
                                        var h = {
                                            name: p.text,
                                            detail: "",
                                            kind: S[p.kind] || l.Mj.SymbolKind.Variable,
                                            range: s._textSpanToRange(e, p.spans[0]),
                                            selectionRange: s._textSpanToRange(e, p.spans[0]),
                                            tags: [],
                                            containerName: b
                                        };
                                        if (p.childItems && p.childItems.length > 0) for(var m = 0, y = p.childItems; m < y.length; m++){
                                            var w = y[m];
                                            c(d, w, h.name);
                                        }
                                        d.push(h);
                                    }, f = [], o.forEach(function(d) {
                                        return c(f, d);
                                    }), [
                                        2,
                                        f
                                    ]);
                            }
                        });
                    });
                }, r;
            }(M), v = function() {
                function t() {}
                return t.unknown = "", t.keyword = "keyword", t.script = "script", t.module = "module", t.class = "class", t.interface = "interface", t.type = "type", t.enum = "enum", t.variable = "var", t.localVariable = "local var", t.function = "function", t.localFunction = "local function", t.memberFunction = "method", t.memberGetAccessor = "getter", t.memberSetAccessor = "setter", t.memberVariable = "property", t.constructorImplementation = "constructor", t.callSignature = "call", t.indexSignature = "index", t.constructSignature = "construct", t.parameter = "parameter", t.typeParameter = "type parameter", t.primitiveType = "primitive type", t.label = "label", t.alias = "alias", t.const = "const", t.let = "let", t.warning = "warning", t;
            }(), S = Object.create(null);
            S[v.module] = l.Mj.SymbolKind.Module, S[v.class] = l.Mj.SymbolKind.Class, S[v.enum] = l.Mj.SymbolKind.Enum, S[v.interface] = l.Mj.SymbolKind.Interface, S[v.memberFunction] = l.Mj.SymbolKind.Method, S[v.memberVariable] = l.Mj.SymbolKind.Property, S[v.memberGetAccessor] = l.Mj.SymbolKind.Property, S[v.memberSetAccessor] = l.Mj.SymbolKind.Property, S[v.variable] = l.Mj.SymbolKind.Variable, S[v.const] = l.Mj.SymbolKind.Variable, S[v.localVariable] = l.Mj.SymbolKind.Variable, S[v.variable] = l.Mj.SymbolKind.Variable, S[v.function] = l.Mj.SymbolKind.Function, S[v.localFunction] = l.Mj.SymbolKind.Function;
            var j = function(t) {
                x(r, t);
                function r() {
                    return t !== null && t.apply(this, arguments) || this;
                }
                return r._convertOptions = function(e) {
                    return {
                        ConvertTabsToSpaces: e.insertSpaces,
                        TabSize: e.tabSize,
                        IndentSize: e.tabSize,
                        IndentStyle: D.Smart,
                        NewLineCharacter: `
`,
                        InsertSpaceAfterCommaDelimiter: !0,
                        InsertSpaceAfterSemicolonInForStatements: !0,
                        InsertSpaceBeforeAndAfterBinaryOperators: !0,
                        InsertSpaceAfterKeywordsInControlFlowStatements: !0,
                        InsertSpaceAfterFunctionKeywordForAnonymousFunctions: !0,
                        InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: !1,
                        InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: !1,
                        InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: !1,
                        PlaceOpenBraceOnNewLineForControlBlocks: !1,
                        PlaceOpenBraceOnNewLineForFunctions: !1
                    };
                }, r.prototype._convertTextChanges = function(e, i) {
                    return {
                        text: i.newText,
                        range: this._textSpanToRange(e, i.span)
                    };
                }, r;
            }(M), Y = function(t) {
                x(r, t);
                function r() {
                    return t !== null && t.apply(this, arguments) || this;
                }
                return r.prototype.provideDocumentRangeFormattingEdits = function(e, i, a, n) {
                    return k(this, void 0, void 0, function() {
                        var o, c, f, s, u, d = this;
                        return _(this, function(p) {
                            switch(p.label){
                                case 0:
                                    return o = e.uri, c = e.getOffsetAt({
                                        lineNumber: i.startLineNumber,
                                        column: i.startColumn
                                    }), f = e.getOffsetAt({
                                        lineNumber: i.endLineNumber,
                                        column: i.endColumn
                                    }), [
                                        4,
                                        this._worker(o)
                                    ];
                                case 1:
                                    return s = p.sent(), e.isDisposed() ? [
                                        2
                                    ] : [
                                        4,
                                        s.getFormattingEditsForRange(o.toString(), c, f, j._convertOptions(a))
                                    ];
                                case 2:
                                    return u = p.sent(), !u || e.isDisposed() ? [
                                        2
                                    ] : [
                                        2,
                                        u.map(function(b) {
                                            return d._convertTextChanges(e, b);
                                        })
                                    ];
                            }
                        });
                    });
                }, r;
            }(j), $ = function(t) {
                x(r, t);
                function r() {
                    return t !== null && t.apply(this, arguments) || this;
                }
                return Object.defineProperty(r.prototype, "autoFormatTriggerCharacters", {
                    get: function() {
                        return [
                            ";",
                            "}",
                            `
`
                        ];
                    },
                    enumerable: !1,
                    configurable: !0
                }), r.prototype.provideOnTypeFormattingEdits = function(e, i, a, n, o) {
                    return k(this, void 0, void 0, function() {
                        var c, f, s, u, d = this;
                        return _(this, function(p) {
                            switch(p.label){
                                case 0:
                                    return c = e.uri, f = e.getOffsetAt(i), [
                                        4,
                                        this._worker(c)
                                    ];
                                case 1:
                                    return s = p.sent(), e.isDisposed() ? [
                                        2
                                    ] : [
                                        4,
                                        s.getFormattingEditsAfterKeystroke(c.toString(), f, a, j._convertOptions(n))
                                    ];
                                case 2:
                                    return u = p.sent(), !u || e.isDisposed() ? [
                                        2
                                    ] : [
                                        2,
                                        u.map(function(b) {
                                            return d._convertTextChanges(e, b);
                                        })
                                    ];
                            }
                        });
                    });
                }, r;
            }(j), q = function(t) {
                x(r, t);
                function r() {
                    return t !== null && t.apply(this, arguments) || this;
                }
                return r.prototype.provideCodeActions = function(e, i, a, n) {
                    return k(this, void 0, void 0, function() {
                        var o, c, f, s, u, d, p, b, h = this;
                        return _(this, function(m) {
                            switch(m.label){
                                case 0:
                                    return o = e.uri, c = e.getOffsetAt({
                                        lineNumber: i.startLineNumber,
                                        column: i.startColumn
                                    }), f = e.getOffsetAt({
                                        lineNumber: i.endLineNumber,
                                        column: i.endColumn
                                    }), s = j._convertOptions(e.getOptions()), u = a.markers.filter(function(y) {
                                        return y.code;
                                    }).map(function(y) {
                                        return y.code;
                                    }).map(Number), [
                                        4,
                                        this._worker(o)
                                    ];
                                case 1:
                                    return d = m.sent(), e.isDisposed() ? [
                                        2
                                    ] : [
                                        4,
                                        d.getCodeFixesAtPosition(o.toString(), c, f, u, s)
                                    ];
                                case 2:
                                    return p = m.sent(), !p || e.isDisposed() ? [
                                        2,
                                        {
                                            actions: [],
                                            dispose: function() {}
                                        }
                                    ] : (b = p.filter(function(y) {
                                        return y.changes.filter(function(w) {
                                            return w.isNewFile;
                                        }).length === 0;
                                    }).map(function(y) {
                                        return h._tsCodeFixActionToMonacoCodeAction(e, a, y);
                                    }), [
                                        2,
                                        {
                                            actions: b,
                                            dispose: function() {}
                                        }
                                    ]);
                            }
                        });
                    });
                }, r.prototype._tsCodeFixActionToMonacoCodeAction = function(e, i, a) {
                    for(var n = [], o = 0, c = a.changes; o < c.length; o++)for(var f = c[o], s = 0, u = f.textChanges; s < u.length; s++){
                        var d = u[s];
                        n.push({
                            resource: e.uri,
                            edit: {
                                range: this._textSpanToRange(e, d.span),
                                text: d.newText
                            }
                        });
                    }
                    var p = {
                        title: a.description,
                        edit: {
                            edits: n
                        },
                        diagnostics: i.markers,
                        kind: "quickfix"
                    };
                    return p;
                }, r;
            }(j), ee = function(t) {
                x(r, t);
                function r() {
                    return t !== null && t.apply(this, arguments) || this;
                }
                return r.prototype.provideRenameEdits = function(e, i, a, n) {
                    return k(this, void 0, void 0, function() {
                        var o, c, f, s, u, d, p, b, h, m, y, w;
                        return _(this, function(A) {
                            switch(A.label){
                                case 0:
                                    return o = e.uri, c = o.toString(), f = e.getOffsetAt(i), [
                                        4,
                                        this._worker(o)
                                    ];
                                case 1:
                                    return s = A.sent(), e.isDisposed() ? [
                                        2
                                    ] : [
                                        4,
                                        s.getRenameInfo(c, f, {
                                            allowRenameOfImportPath: !1
                                        })
                                    ];
                                case 2:
                                    if (u = A.sent(), u.canRename === !1) return [
                                        2,
                                        {
                                            edits: [],
                                            rejectReason: u.localizedErrorMessage
                                        }
                                    ];
                                    if (u.fileToRename !== void 0) throw new Error("Renaming files is not supported.");
                                    return [
                                        4,
                                        s.findRenameLocations(c, f, !1, !1, !1)
                                    ];
                                case 3:
                                    if (d = A.sent(), !d || e.isDisposed()) return [
                                        2
                                    ];
                                    for(p = [], b = 0, h = d; b < h.length; b++)if (m = h[b], y = l.Sf.parse(m.fileName), w = l.j6.getModel(y), w) p.push({
                                        resource: y,
                                        edit: {
                                            range: this._textSpanToRange(w, m.textSpan),
                                            text: a
                                        }
                                    });
                                    else throw new Error("Unknown URI " + y + ".");
                                    return [
                                        2,
                                        {
                                            edits: p
                                        }
                                    ];
                            }
                        });
                    });
                }, r;
            }(M), O, N;
            function te(t) {
                N = R(t, "typescript");
            }
            function re(t) {
                O = R(t, "javascript");
            }
            function ne() {
                return new Promise(function(t, r) {
                    if (!O) return r("JavaScript not registered!");
                    t(O);
                });
            }
            function ie() {
                return new Promise(function(t, r) {
                    if (!N) return r("TypeScript not registered!");
                    t(N);
                });
            }
            function R(t, r) {
                var e = new H(r, t), i = function() {
                    for(var n = [], o = 0; o < arguments.length; o++)n[o] = arguments[o];
                    return e.getLanguageServiceWorker.apply(e, n);
                }, a = new V(i);
                return l.Mj.registerCompletionItemProvider(r, new U(i)), l.Mj.registerSignatureHelpProvider(r, new z(i)), l.Mj.registerHoverProvider(r, new G(i)), l.Mj.registerDocumentHighlightProvider(r, new J(i)), l.Mj.registerDefinitionProvider(r, new Z(a, i)), l.Mj.registerReferenceProvider(r, new Q(a, i)), l.Mj.registerDocumentSymbolProvider(r, new X(i)), l.Mj.registerDocumentRangeFormattingEditProvider(r, new Y(i)), l.Mj.registerOnTypeFormattingEditProvider(r, new $(i)), l.Mj.registerCodeActionProvider(r, new q(i)), l.Mj.registerRenameProvider(r, new ee(i)), new B(a, t, r, i), i;
            }
        }
    }
]);

},{}]},["3EhP0","ipli0"], "ipli0", "parcelRequirec5e9")

//# sourceMappingURL=node_modules_monaco-editor_esm_vs_language_typescript_tsMode_js.chunk.js.map
